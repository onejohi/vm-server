{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./src/services/data.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Vending Machine</span>\\n  <span class=\\\"spanmiddle\\\"></span>\\n  <span>\\n    <button mat-button (click)=\\\"completeTransaction()\\\">Complete Transaction</button>\\n  </span>\\n</mat-toolbar>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <mat-card>\\n      <mat-card-subtitle>\\n        Add money by tapping on the denominations:\\n      </mat-card-subtitle>\\n      <mat-card-content>\\n        <span>\\n            <button mat-button color='primary' (click)=\\\"addCoin(5)\\\">KSH 5</button>\\n            <button mat-button color='primary' (click)=\\\"addCoin(10)\\\">KSH 10</button>\\n            <button mat-button color='primary' (click)=\\\"addCoin(20)\\\">KSH 20</button>\\n            <button mat-button color='primary' (click)=\\\"addCoin(40)\\\">KSH 40</button>\\n        </span>\\n        <span class=\\\"spanmiddle\\\"></span>\\n        <span>\\n           Available balance in KES: {{initialAmount}} \\n        </span>\\n      </mat-card-content>\\n    </mat-card>\\n    <br>\\n    \\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Code</th>\\n            <th>Name</th>\\n            <th>Price (ksh)</th>\\n            <th>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of vendorItems\\\">\\n            <td>{{item.code}}</td>\\n            <td>{{item.name}}</td>\\n            <td>{{item.price}}</td>\\n            <td>\\n              <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"makePurchase(item.price, item.name)\\\">Purchase</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core'\nimport { DataService } from \"../services/data.service\"\nimport { MatSnackBar } from \"@angular/material\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  //initialize the current amount to zero to begin fresh transactions\n  initialAmount: number = 0;\n  vendorItems: Item[];\n\n  constructor(public data: DataService, public snack: MatSnackBar) {\n    //get all items available for selling from data service\n    this.data.getVendorItems().subscribe(items => {\n      this.vendorItems = items\n    })\n  }\n\n  //increment value of balance each time user adds in a new coin\n  addCoin(value) {\n    this.initialAmount = this.initialAmount + value\n  }\n\n  //when a user makes a purchase, pass in the price and name of the item to be used later\n  makePurchase(price: number, name: string) {\n    //checks to see if you've added enough money to make a purchase\n    if(price > this.initialAmount) {\n      //calculate how much more is needed for current item being sold\n      let remaining = price - this.initialAmount\n      this.snack.open(`You don't have enough money to purchase this item, please add KES ${remaining}.`, \"Ok\", {\n        duration: 3000,\n        verticalPosition: 'top'\n      })\n    } else {\n      //decrement value from the amount user has\n      this.initialAmount = this.initialAmount - price\n      this.snack.open(`Vending ${name} worth ${price}, your current available balance is ${this.initialAmount}.`, \"Ok\", {\n        duration: 3500,\n        verticalPosition: 'top'\n      })\n    }\n  }\n\n  //complete the transaction, give user back balance and reset the vending machine\n  completeTransaction() {\n    if(this.initialAmount == 0) {\n      this.snack.open(`Thank you for using our vending machine, you have no available balance.`, \"Ok\", {\n        duration: 3000,\n        verticalPosition: 'top'\n      })\n    } else {\n      this.snack.open(`Thank you for using our vending machine, your balance is ${this.initialAmount}.`, \"Ok\", {\n        duration: 3000,\n        verticalPosition: 'top'\n      })\n      //reset balance to 0 if user is done buying items\n      this.initialAmount = 0\n    }\n  }\n\n}\n\nclass Item {\n  code: number;\n  name: string;\n  price: number; \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpModule } from \"@angular/http\";\n\n\nimport { AppComponent } from './app.component';\n\n//import angular material elements\nimport { MatToolbarModule, MatCardModule, MatButtonModule, MatSnackBarModule } from \"@angular/material\";\nimport { DataService } from '../services/data.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable()\nexport class DataService {\n\n  constructor(public http: Http) { }\n\n  getVendorItems() {\n    return this.http.get('./assets/items.json').map(res => res.json())\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/data.service.ts"],"sourceRoot":"webpack:///"}